group = 'codes.rik.simplehome'
version = '0.1'

buildscript {
    ext.kotlin_version = '1.2.31'
    ext.protobuf_version = '3.5.1'
    ext.aws_version = '1.11.255'
    ext.shadow_plugin_version = gradle.gradleVersion <= '2.7' ? '1.2.4' : '2.0.3' // latest version for AWS Gradle
    ext.protobuf_plugin_version = gradle.gradleVersion <= '2.7' ? '0.7.5' : '0.8.5' // latest version for AWS Gradle

    repositories {
        mavenCentral()
        jcenter()
    }

    dependencies {
        classpath 'com.amazonaws:aws-java-sdk-core:1.11.5'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "com.github.jengelman.gradle.plugins:shadow:$shadow_plugin_version"
        classpath "com.google.protobuf:protobuf-gradle-plugin:$protobuf_plugin_version"
        classpath 'org.junit.platform:junit-platform-gradle-plugin:1.1.0'
    }
}

apply plugin: 'idea'
apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: 'com.google.protobuf'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
    jcenter()
    maven { url = 'http://dl.bintray.com/jetbrains/spek' }
}

protobuf {
    protoc {
        // Download from repositories
        artifact = "com.google.protobuf:protoc:$protobuf_version"
    }
}

dependencies {
    compile(
        fileTree(dir: 'jars', include: '*.jar'),

        // Kotlin
        "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version",
        "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version",

        // Me
        'codes.rik:kotlin-bits:0.1',

        // AWS
        'com.amazonaws:aws-lambda-java-core:1.2.0',
        'com.amazonaws:aws-lambda-java-log4j:1.0.0',

        // Gson
        'com.github.salomonbrys.kotson:kotson:2.5.0',

        // Guava
        'com.google.guava:guava:24.1-jre',

        // Logging
        'io.github.microutils:kotlin-logging:1.4.8',
        'org.slf4j:slf4j-log4j12:1.7.25',

        // Protobufs
        "com.google.protobuf:protobuf-java:$protobuf_version",
        "com.google.protobuf:protobuf-java-util:$protobuf_version",
    )
}

compileKotlin {
    dependsOn('generateProto') // ensure protobufs generated beforehand
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

clean {
    delete protobuf.generatedFilesBaseDir
}

idea {
    module {
        sourceDirs += file("${protobuf.generatedFilesBaseDir}/main/java")
        sourceDirs += file("${protobuf.generatedFilesBaseDir}/main/grpc")
    }
}

task runLocal(type: Exec) {
    dependsOn 'shadowJar'
    commandLine 'sam', 'local', 'start-api',
            '-t', 'cloudformation/template.yaml',
            '--profile', 'simplehome-local-dev',
            '--env-vars', 'config/dev/environment.json'
}
